GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) -> df.complete
#ANXIETY
#intervention group
#7-MONTH
cor(df.complete[df.complete$Condition== "Wellness" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Wellness" & df.complete$Time==28,]$GAD_Total, use = 'complete.obs') #. 05
#control group
cor(df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==28,]$GAD_Total, use = 'complete.obs')# 0.4
#week 6
cor(df.complete[df.complete$Condition== "Wellness" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Wellness" & df.complete$Time==6,]$GAD_Total, use = 'complete.obs') #. 05
#endpoint
cor(df.complete[df.complete$Condition== "Wellness" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Wellness" & df.complete$Time==4,]$GAD_Total, use = 'complete.obs') #. 05
cor(df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==6,]$GAD_Total, use = 'complete.obs')# 0.4
cor(df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==6,]$GAD_Total, use = 'complete.obs')# 0.4
#control group
cor(df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==28,]$GAD_Total, use = 'complete.obs')# 0.4
cor(df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==6,]$GAD_Total, use = 'complete.obs')# 0.4
cor(df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==28,]$GAD_Total, use = 'complete.obs')# 0.4
cor(df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Study-skills" & df.complete$Time==4,]$GAD_Total, use = 'complete.obs')# 0.07
#7-motnh
cor(df.complete[df.complete$Condition== "Wellness" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Wellness" & df.complete$Time==28,]$GAD_Total, use = 'complete.obs') #. 05
#week 6
cor(df.complete[df.complete$Condition== "Wellness" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Wellness" & df.complete$Time==6,]$GAD_Total, use = 'complete.obs') #. 04
#endpoint
cor(df.complete[df.complete$Condition== "Wellness" & df.complete$Time==0,]$GAD_Total,
df.complete[df.complete$Condition== "Wellness" & df.complete$Time==4,]$GAD_Total, use = 'complete.obs') #. 09
13.24-8.66
13.32-7.32
13.24-7.70
complete(df_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 0
) -> baseline
complete(df_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 2
) -> midpoint
complete(df_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 4
) -> endpoint
complete(df_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 6
) -> week2
complete(df_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 28
) -> month7
psych::describeBy(week2$GAD_Total, week2$Condition)
13.3208.14
13.32-8.14
13.24-9.49
complete(primary_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 0
) -> baseline
complete(primary_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 2
) -> midpoint
complete(primary_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 4
) -> endpoint
complete(week_2_follow_up_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 6
) -> week2
complete(df_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 28
) -> month7
psych::describeBy(baseline$PHQ_Total, baseline$Condition)
psych::describeBy(baseline$GAD_Total, baseline$Condition)
psych::describeBy(week2$PHQ_Total, week2$Condition)
psych::describeBy(endpoint$GAD_Total, endpoint$Condition)
13.24-7.87
13.24-7.70
round(summary(phqModel1a_est),2)
#phq model
#model 1a - school as random
phqModel_1a <- with(primary_imputed,
lmer(
(PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8) ~
Time + Condition + Time * Condition + Gender + Age +
(1|Participant_ID)+(1|School), REML = TRUE,
control = lmerControl(optimizer ="Nelder_Mead")
))
phqModel1a_est <- pool(phqModel_1a)
round(summary(phqModel1a_est),2)
round(summary(phqModel1a_est),3)
round(summary(phqModel1a_est),2)
GADModel_1b <- with(primary_imputed,
lmer((GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7)~Time +
Condition + Time * Condition + Gender + Age + School +
+ (1|Participant_ID), REML = TRUE,
control = lmerControl(optimizer ="Nelder_Mead")))
GADModel_1b_est <- pool(GADModel_1b)
round(summary(GADModel_1b_est),2)
phqModel_2a <- with(week_2_follow_up_imputed,
lmer(
(PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8) ~
Time + Condition + Time * Condition + Gender + Age +
(1|Participant_ID)+(1|School), REML = TRUE,
control = lmerControl(optimizer ="Nelder_Mead")
))
phqModel2a_est <- pool(phqModel_2a)
sjPlot::tab_df(summary(phqModel1b_est))
sjPlot::tab_df(summary(phqModel1a_est))
phqModel_2a <- with(week_2_follow_up_imputed,
lmer(
(PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8) ~
Time + Condition + Time * Condition + Gender + Age +
(1|Participant_ID)+(1|School), REML = TRUE,
control = lmerControl(optimizer ="Nelder_Mead")
))
phqModel2a_est <- pool(phqModel_2a)
round(summary(phqModel2a_est),2)
sjPlot::tab_df(summary(phqModel1a_est))
sjPlot::tab_df(summary(phqModel2a_est))
round(summary(phqModel2a_est),3)
sjPlot::tab_df(round(summary(phqModel2a_est),2)))
sjPlot::tab_df(round(summary(phqModel2a_est),2))
round(summary(phqModel2a_est),2)
round(summary(phqModel2a_est),3)
round(summary(phqModel2a_est),4)
#phq model
#model 1, school as random intercept
phqModel_3a <- with(df_imputed,
expr = lmer((PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8)~Time +
Condition + Time * Condition + Gender + Age
+ (1+Time|Participant_ID)+(1|School), REML = TRUE,
control = lmerControl(optimizer ="Nelder_Mead")))
phqModel3a_est <- pool(phqModel_3a)
summary(phqModel3a_est)
complete(df_imputed) %>%
dplyr::mutate(
PHQ_Total = PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8,
GAD_Total = GAD_1+GAD_2+GAD_3+GAD_4+GAD_5+GAD_6+GAD_7
) %>%
dplyr::filter(
Time == 0
) -> baseline
cor(baseline$PHQ_Total, baseline$GAD_Total)
gridExtra::grid.arrange(phq.trend, gad.trend, ncol = 1)
complete(df_imputed) %>%
ggplot(aes(x = Time, y = (GAD_1+GAD_2+GAD_3+	GAD_4+ GAD_5+GAD_6+GAD_7), shape = Condition, color=Condition)) +
stat_summary(fun.y = mean, geom = "line", size = 1) +
stat_summary(fun.data = mean_se, geom = "pointrange", size = 1) +
scale_color_manual(values = c("Study-skills" = "#C02739", "Wellness" = "#037d50"))+
scale_x_continuous(breaks = c(0,4,8,12,16,20,24,28),
labels = c('0', '1', '2', '3','4','5','6','7')) +
labs(x = "Time, months", y = "Anxiety symptoms (GAD-7)")+
theme(legend.position = "none",
panel.border = element_rect(colour = 'black', fill = NA, size = 1),
panel.background = element_rect(colour = "white", fill = NA),
panel.grid.major.y = element_line(colour = 'gray'),
panel.grid.minor.y = element_line(colour = 'lightgray'),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size=14))+
coord_cartesian(ylim = c(6.5,13.5)) -> gad.trend
#VISUALIZE
complete(df_imputed) %>%
ggplot(aes(x = Time, y = (PHQ_1+PHQ_2+PHQ_3+PHQ_4+PHQ_5+PHQ_6+PHQ_7+PHQ_8), shape = Condition, color=Condition)) +
stat_summary(fun.y = mean, geom = "line", size = 1) +
stat_summary(fun.data = mean_se, geom = "pointrange", size = 1) +
stat_summary(fun.y = mean, geom = "line", size = 1) +
stat_summary(fun.data = mean_se, geom = "pointrange", size = 1) +
scale_color_manual(values = c("Study-skills" = "#C02739", "Wellness" = "#037d50"))+
scale_x_continuous(breaks = c(0,4,8,12,16,20,24,28),
labels = c('0', '1', '2', '3','4','5','6','7')) +
labs(title = "Figure 2. Fitted values showing trajectories of depression and anxiety symptoms" ) +
theme(legend.position = "bottom",
legend.text = element_text(size = 14),
legend.title = element_text(size = 14),
panel.border = element_rect(colour = 'black', fill = NA, size = 1),
panel.background = element_rect(colour = "white", fill = NA),
panel.grid.major.y = element_line(colour = 'gray'),
panel.grid.minor.y = element_line(colour = 'lightgray'),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size=14))+
labs(x = "Time, months", y = "Depression symptoms (PHQ-8)", color="Condition:", shape="Condition:")+
coord_cartesian(ylim = c(6.5,13.5)) -> phq.trend
gridExtra::grid.arrange(phq.trend, gad.trend, ncol = 1)
headers <- c('options','condition')
headers <- c('options','condition1', 'condition2')
data.frame(row.names = headers)
data.frame(row.names = headers) -> a
a
View(a)
data.frame(headers) -> a
View(a)
df.new <- data.frame()
df.new$options
df.new$options <- ""
df.new$options <- ""
df.new$options
df.new <- data.frame(options=NA, condition1 = NA, condition2 = NA)
df.new
df.James <- data.frame("JamesPolicy", 1, 2)
rbind(df.new, df.James)
names(df.James) <- headers
rbind(df.new, df.James)
df.Bob <- data.frame("JamesBob", 1, 4)
names(df.Bob) <- headers
rbind(df.new, df.Bob)
headers <- c('options','condition1', 'condition2')
df.new
df.new
df.new <- data.frame(options=NA, condition1 = NA, condition2 = NA)
df.James <- data.frame("JamesPolicy", 1, 2)
names(df.James) <- headers
rbind(df.new, df.James)
rbind(df.new, df.James) -> df.new
rbind(df.new, df.Bob) -> df.new
if (!require(tidyverse)) {install.packages("tidyverse"); require(tidyverse)}
if (!require(ggplot2)) {install.packages("ggplot2"); require(ggplot2)}
barplot(df.new$options)
barplot(df.new$condition1)
ggplot(df.new, aes(x=options))
ggplot(df.new, aes(x=options)) +
geom_abline(stat='identity', aes(y=condition1))
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1))
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1)) +
geom_bar(stat='identity', aes(y=condition2))
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1)) +
geom_bar(stat='identity', aes(y=condition2))
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1)) +
geom_bar(stat='identity', aes(y=condition2, fill = 'steelblue'))
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1)) +
geom_bar(stat='identity', aes(y=condition2, position= position_dodge(width=0.9), fill = 'steelblue'))
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1)) +
geom_bar(stat='identity', aes(y=condition2),
position= position_dodge(width=0.9), fill = 'steelblue'))
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1)) +
geom_bar(stat='identity', aes(y=condition2),
position= position_dodge(width=0.9), fill = 'steelblue'))
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1)) +
geom_bar(stat='identity', aes(y=condition2),
width=.2, fill = 'steelblue'))
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1)) +
geom_bar(stat='identity', aes(y=condition2),
width=.2, fill = 'steelblue')
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1)) +
geom_bar(stat='identity', aes(y=condition2),
width=.2, position =  position_dodge(width=0.9),
fill = 'steelblue')
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1),
width=.2, position =  position_dodge(width=0.9)) +
geom_bar(stat='identity', aes(y=condition2),
width=.2, position =  position_dodge(width=0.9),
fill = 'steelblue')
ggplot(df.new, aes(x=options)) +
geom_bar(stat='identity', aes(y=condition1),
position =  position_dodge(width=0.9)) +
geom_bar(stat='identity', aes(y=condition2),
width=.2, position =  position_dodge(width=0.9),
fill = 'steelblue')
df.new
ggplot(df, aex(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1))
ggplot(df.new, aex(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1))
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1))
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white') +
geom_bar(stat = 'identity', aes(y=condition2), fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white') +
geom_bar(stat = 'identity', aes(y=condition2), position =position_dodge(width=0.9),  fill='blue')
geom_bar(stat = 'identity', aes(y=condition1), fill='white', position_dodge(width=0.2) +
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', position_dodge(width=0.2) +
geom_bar(stat = 'identity', aes(y=condition2), position =position_dodge(width=0.9),  fill='blue')
dz
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', position_dodge(width=0.2) +
geom_bar(stat = 'identity', aes(y=condition2), position =position_dodge(width=0.9),  fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', position_dodge(width=0.2)) +
geom_bar(stat = 'identity', aes(y=condition2), position =position_dodge(width=0.9),  fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', position_dodge(width=0.2)) +
geom_bar(stat = 'identity', aes(y=condition2), position =position_dodge(width=0.9),  fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', position_dodge(width=0.2)) +
geom_bar(stat = 'identity', aes(y=condition2), position =position_dodge(width=0.9),  fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white') +
geom_bar(stat = 'identity', aes(y=condition2), position =position_dodge(width=0.9),  fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', width = .5) +
geom_bar(stat = 'identity', aes(y=condition2), position =position_dodge(width=0.9),  fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', width = .5, position = "dodge") +
geom_bar(stat = 'identity', aes(y=condition2), position =position_dodge(width=0.9),  fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', width = .5, position = "dodge") +
geom_bar(stat = 'identity', aes(y=condition2), width = .5, position = "dodge"9),  fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', width = .5, position = "dodge") +
geom_bar(stat = 'identity', aes(y=condition2), width = .5, position = "dodge",  fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', width = .5, position = "dodge") +
geom_bar(stat = 'identity', aes(y=condition2), width = 1, position = "dodge",  fill='blue')
ggplot(df.new, aes(x=options, color=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', width = .5, position = "dodge")
ggplot(df.new, aes(x=options, group=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', width = .5, position = "dodge") +
geom_bar(stat = 'identity', aes(y=condition2), width = 1, position = "dodge",  fill='blue')
ggplot(df.new, aes(x=options, group=options)) +
geom_bar(stat = 'identity', aes(y=condition1)
fill = 'steelblue')
ggplot(df.new, aes(x=options, group=options)) +
geom_bar(stat = 'identity', aes(y=condition1))
ggplot(df.new, aes(x=options, group=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', width = .5, position = "dodge")
ggplot(df.new, aes(x=options, group=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', width = .5, position = "dodge") +
geom_bar(stat = 'identity', aes(y=condition2), width = 1, position = "dodge",  fill='blue')
df.new$options <- factor(df.new$options)
df.new$options
within(df.new, levels=names(sort(table(options), decreasing=TRUE)
within(df.new, levels=names(sort(table(options), decreasing=TRUE)
within(df.new, levels=names(sort(table(options), decreasing=TRUE)))
within(df.new, a <- levels=names(sort(table(options), decreasing=TRUE)))
within(df.new, a <- levels=names(sort(table(options))))
ggplot(df.new, aes(x=options)) -> a
b <- a + geom_bar(aes(y=condition1))
b
b <- a + geom_bar(aes(y=condition1), stat = 'identity')
b
b <- a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue')
b <- a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity', fill='blue')
b
b <- a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity',width = .5, fill='')
b <- a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity',width = .5, fill='grey')
b
b <- a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity',width = .5, position = 'dodge' fill='grey')
b <- a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity',width = .5, position = 'dodge', fill='grey')
b
b <- a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity',width = 1.5, position = 'dodge', fill='grey')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity',width = 1.5, position = 'dodge', fill='grey')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity', position = "dodge", width = 1.5, position = 'dodge', fill='grey')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity', position = "dodge", width = .2, position = 'dodge', fill='grey')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity', position = "dodge", width = .2, position = 'dodge', fill='grey')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue') +
geom_bar(aes(y=condition2), stat = 'identity', width = .2, position = 'dodge', fill='grey')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue', width = .1) +
geom_bar(aes(y=condition2), stat = 'identity', width = .2, position = 'dodge', fill='grey')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue', width = .2) +
geom_bar(aes(y=condition2), stat = 'identity', width = .2, position = 'dodge', fill='grey')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue', width = .2) +
geom_bar(aes(y=condition2), stat = 'identity', width = 1, position = 'dodge', fill='grey')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue', width = .2, position = 'dodge) +
geom_bar(aes(y=condition2), stat = 'identity', width = 1, position = 'dodge', fill='grey')
+
geom_bar(stat='identity', aes(y=condition1, colo),
position =  position_dodge(width=0.9)) +
geom_bar(stat='identity', aes(y=condition2),
width=.2, position =  position_dodge(width=0.9),
fill = 'steelblue')
ggplot(df.new, aes(x=options, group=options)) +
geom_bar(stat = 'identity', aes(y=condition1), fill='white', width = .5, position = "dodge") +
geom_bar(stat = 'identity', aes(y=condition2), width = 1, position = "dodge",  fill='blue')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue', width = .2, position = 'dodge') +
geom_bar(aes(y=condition2), stat = 'identity', width = 1, position = 'dodge', fill='grey')
a + geom_bar(aes(y=condition1), stat = 'identity', fill='blue', width = .2, position = 'dodge') +
geom_bar(aes(y=condition2), stat = 'identity', width = .1, position = 'dodge', fill='grey')
rm(list = ls())
#load packages
if (!require(devtools)) {install.packages("devtools"); require(devtools)}
if (!require(tidyverse)) {install.packages("tidyverse"); require(tidyverse)}
if (!require(ggplot2)) {install.packages("ggplot2"); require(ggplot2)}
if (!require(ggpubr)) {install.packages("ggpubr"); require(ggpubr)}
if (!require(boot)) {install.packages("boot"); require(boot)}
if (!require(lme4)) {install.packages("lme4"); require(lme4)}
if (!require(sjPlot)) {install.packages("sjPlot"); require(sjPlot)}
if (!require(ggstatsplot)) {install_github("IndrajeetPatil/ggstatsplot");
require(ggstatsplot)}
if (!require(lmerTest)) {install.packages("lmerTest"); require(lmerTest)}
if (!require(nlme)) {install.packages("nlme"); require(nlme)}
if (!require(rmarkdown)) {install.packages("rmarkdown"); require(rmarkdown)}
if (!require(gridExtra)) {install.packages("gridExtra"); require(gridExtra)}
if (!require(simr)) {install.packages("simr"); require(simr)}
#set working directory to the directory where script is residing
groupedstats:::set_cwd()
#with sigma mf = 1; sigma mb = 0
df <- read_csv('person_condition_data.csv')%>%
arrange(subject)
colnames(df)
#mutat
df <- df %>%
dplyr::mutate(
rewarded.fac = factor(last.reward >0, c(T,F), c("+ive reward", "-ive reward")),
common.fac = factor(lag(S2)==(lag(Action1)+1), c(T,F), c('Common','Rare'))
)
#first groupby
df.bysubj <- df %>%
na.omit()%>%
dplyr::group_by(rewarded.fac, common.fac, subject) %>%
dplyr::summarize(
prob.stay = mean(repeated, na.rm = TRUE)
)
df.agg <- df.bysubj %>%
dplyr::group_by(common.fac, rewarded.fac) %>%
dplyr::summarize(
prob.stay.mean = mean(prob.stay),
prob.stay.se = sd(prob.stay)/sqrt(n())
)
#plot
ggplot(df.agg, aes(x=rewarded.fac, y = prob.stay.mean,fill = common.fac)) +
geom_bar(
stat = 'identity',
position = position_dodge(width = .9),
width = .9
) +
geom_errorbar(
aes(ymin = prob.stay.mean - prob.stay.se, ymax = prob.stay.mean + prob.stay.se),
width = .2,
position = position_dodge(width = .9)
) +
theme(legend.text = element_blank(), legend.title = element_blank(), legend.position = 'none',
plot.title = element_text(hjust=0.5, size = 14),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(colour = "white", fill = NA)) +
scale_fill_manual(values = c("Common" = "#C02739", "Rare" = "#29C7AC")) +
coord_cartesian(ylim=c(0,.7)) +
labs(fill = 'Transition',
y = 'Stay probability',
x = '',
title = 'Study 1 Person Condition')
model1 <- glmer(repeated ~ last.reward * last.common + (1+last.reward * last.common|subject) + (1|matched_player_id),
family = binomial, data = df)
summary(model1)
